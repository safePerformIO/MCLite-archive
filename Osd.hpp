/**
 * @file Osd.hpp
 * @author H14
 * @brief OSD (On Screen Display) shows the status of the player and the game, containing HPbar, weapon, player current holding item, and current game FPS
 * @version 0.1
 * @date 2021-11-30
 *
 * @copyright Copyright (c) 2021
 *
 */

#pragma once

#include <QPainter>
#include <QGraphicsItem>
#include <QFont>
#include "./Block/Block.hpp"

struct Channel;
class Osd : public QGraphicsItem
{
public:
    /**
     * @brief Construct a new Osd object
     *
     * @param channel pass the channel to osd
     */
    Osd(Channel *channel);

    /**
     * @brief Destroy the Osd object, using default destructor
     *
     */
    ~Osd();

    /**
     * @brief this function overrides pure virtual function in QGraphicsItem
     *
     * @return QRectF
     */
    QRectF boundingRect() const;

    /**
     * @brief this function is automatically called when the game refreshes, which will draw the OSD on the top and the bottom of the screen
     *
     * @param painter // this is the painter to draw image on screen
     * @param option // automatically generated by Qt, unused
     * @param widget // automatically generated by Qt, unused
     */
    void paint(QPainter *painter, const QStyleOptionGraphicsItem *option, QWidget *widget);

    /**
     * @brief Get the bounding area of weapons, used to check whether the player is clicking on the weapon icon
     *
     * @param weapon
     * @return QRectF
     */
    QRectF getWeaponRect(const HarvestLevel &weapon) const;

private:
    Channel *channel; // the channel

    /**
     * @brief variables used to show the hp bar
     *
     */
    int hp = 100,         // current hp value
        last_hp = 100,    // used to check whether hp is changed
        pre_hp = 100;     // used to paint the hp reduction effect
    int hurt_process = 0; // used to paint the hp reduction effect

    /**
     * @brief image resources of weapons and HUDs, and also coordinates of them
     *
     */
    const QImage Weapon_pickaxe, Weapon_shovel, Weapon_sword, weapon_HUD, item_HUD; // the weapon images
    QRectF Weapon_pickaxe_i, Weapon_pickaxe_b;                                      // the weapon coordinates
    QRectF Weapon_shovel_i, Weapon_shovel_b;
    QRectF Weapon_sword_i, Weapon_sword_b;
    QRectF Weapon_1, Weapon_2, Weapon_3;
    QRectF Weapon_1_b, Weapon_2_b, Weapon_3_b;

    QRectF hpBar; // the hpBar coordinates

    /**
     * @brief variables for FPS counting
     *
     */
    QFont FPSf; // the font to print FPS
    int FPS,    // the current FPS result
        sF,     // the current sum of frame
        sT;     // the current sum of time elapsed, used to count fram pre second

    /**
     * @brief this function is called once per frame by the 'paint' function, and it will update the status of the OSD
     *
     */
    void update();

    /**
     * @brief this function will count and return the current FPS, which is helpful for VFR (Variable Frame Rate)
     *
     */
    void getFPS();
};
